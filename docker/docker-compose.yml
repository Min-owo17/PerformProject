version: "3.9"
services:
  postgres:
    image: postgres:15
    container_name: perform_postgres
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=${PGDATA}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/data:${PGDATA}
      - ./postgres/initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: perform_pgadmin
    env_file: .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7-alpine
    container_name: perform_redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: quay.io/minio/minio:RELEASE.2024-05-10T01-41-38Z
    container_name: perform_minio
    env_file: .env
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # 콘솔
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 20

  minio-init:
    image: quay.io/minio/mc:RELEASE.2024-05-10T00-17-41Z
    container_name: perform_minio_init
    depends_on:
      minio:
        condition: service_healthy
    env_file: .env
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
       mc mb -p local/${MINIO_BUCKET} || true &&
       mc anonymous set download local/${MINIO_BUCKET}"

  # (옵션) FastAPI 백엔드 컨테이너 예시
  # backend:
  #   build:
  #     context: ../backend
  #   env_file: .env
  #   environment:
  #     - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  #     - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
  #     - S3_ENDPOINT=http://minio:9000
  #     - S3_ACCESS_KEY=${MINIO_ROOT_USER}
  #     - S3_SECRET_KEY=${MINIO_ROOT_PASSWORD}
  #     - S3_BUCKET=${MINIO_BUCKET}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy

volumes:
  pgadmin_data:
  minio_data:


